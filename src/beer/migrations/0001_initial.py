# Generated by Django 2.1.7 on 2019-05-11 18:14

import colorful.fields
from django.db import migrations, models
import django.db.models.deletion
import wagtailmetadata.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailimages', '0001_squashed_0021'),
        ('wagtaildocs', '0010_document_file_hash'),
        ('wagtailcore', '0041_group_collection_permissions_verbose_name_plural'),
    ]

    operations = [
        migrations.CreateModel(
            name='Beer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now=True, verbose_name='Created at')),
                ('updated', models.DateTimeField(auto_now_add=True, verbose_name='Update at')),
                ('sort_order', models.PositiveIntegerField(default=1000, verbose_name='Displaying order')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Beer name')),
                ('claim', models.TextField(blank=True, null=True, verbose_name='Beer claim')),
                ('contrast_background', colorful.fields.RGBColorField(default='#FBD872', verbose_name='Color used to contrast photos and graphics')),
                ('has_polykeg', models.BooleanField(default=False, verbose_name='Polikeg available')),
                ('short_description', models.TextField(default='Short description goes here', verbose_name='Short description')),
                ('start_availability', models.DateField(blank=True, null=True, verbose_name='Start availability date')),
                ('end_availability', models.DateField(blank=True, null=True, verbose_name='End availability date')),
                ('tasting_style', models.CharField(max_length=255, null=True, verbose_name='Tasting Style')),
                ('alcoholic_content', models.CharField(max_length=255, verbose_name='ABV')),
                ('ibu', models.CharField(default='15.5', max_length=255, verbose_name='IBU')),
                ('food_pairings', models.CharField(blank=True, max_length=255, null=True, verbose_name='Food pairings')),
                ('serving_temperature', models.CharField(max_length=255, verbose_name='Serving Temperature')),
                ('ingredients', models.CharField(default='Pay atention => Only the best natural ingredients.', max_length=512, verbose_name='Beer ingredients')),
            ],
            options={
                'verbose_name': 'Beer',
                'verbose_name_plural': 'Beers',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='BeerAvailability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now=True, verbose_name='Created at')),
                ('updated', models.DateTimeField(auto_now_add=True, verbose_name='Update at')),
                ('sort_order', models.PositiveIntegerField(default=1000, verbose_name='Displaying order')),
                ('beer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availabilities_type', to='beer.Beer', verbose_name='Beer')),
            ],
            options={
                'verbose_name': 'Beer Availability',
                'verbose_name_plural': 'Beer Availabilities',
            },
        ),
        migrations.CreateModel(
            name='BeerCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now=True, verbose_name='Created at')),
                ('updated', models.DateTimeField(auto_now_add=True, verbose_name='Update at')),
                ('sort_order', models.PositiveIntegerField(default=1000, verbose_name='Displaying order')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Category name')),
                ('claim', models.TextField(blank=True, null=True, verbose_name='Category claim')),
            ],
            options={
                'verbose_name': 'Beer Category',
                'verbose_name_plural': 'Beer Categories',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='BeerCategoryIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('search_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image', verbose_name='Search image')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtailmetadata.models.MetadataMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='BeerCategoryPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='beer.BeerCategory', verbose_name='Page for category:')),
                ('search_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image', verbose_name='Search image')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtailmetadata.models.MetadataMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='BeerContainer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now=True, verbose_name='Created at')),
                ('updated', models.DateTimeField(auto_now_add=True, verbose_name='Update at')),
                ('sort_order', models.PositiveIntegerField(default=1000, verbose_name='Displaying order')),
                ('name', models.CharField(max_length=255, verbose_name='Container name')),
                ('volume', models.IntegerField(default=0, verbose_name='Volume in cl')),
                ('svg_icon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document')),
            ],
            options={
                'verbose_name': 'Beer Container',
                'verbose_name_plural': 'Beer Containers',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='BeerPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('beer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='beer.Beer', verbose_name='Beer to detail in the page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AddField(
            model_name='beeravailability',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='beers_available', to='beer.BeerContainer', verbose_name='Container'),
        ),
        migrations.AddField(
            model_name='beer',
            name='beer_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='beers', to='beer.BeerCategory', verbose_name='Beer Category'),
        ),
        migrations.AddField(
            model_name='beer',
            name='bottle_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image'),
        ),
        migrations.AddField(
            model_name='beer',
            name='conil_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image'),
        ),
        migrations.AddField(
            model_name='beer',
            name='glass_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image'),
        ),
        migrations.AddField(
            model_name='beer',
            name='infographic_icon',
            field=models.ForeignKey(blank=True, help_text='It shows bitterness, strength and colour', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document', verbose_name='Graphic icon for beer spec'),
        ),
        migrations.AddField(
            model_name='beer',
            name='label',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image'),
        ),
        migrations.AddField(
            model_name='beer',
            name='spec_sheet',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document'),
        ),
        migrations.AddField(
            model_name='beer',
            name='tap_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image'),
        ),
        migrations.AlterUniqueTogether(
            name='beeravailability',
            unique_together={('beer', 'container')},
        ),
    ]
