# Generated by Django 2.1.7 on 2019-05-11 18:15

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import phonenumber_field.modelfields
import wagtail.core.fields
import wagtail.search.index
import wagtailschemaorg.registry


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0041_group_collection_permissions_verbose_name_plural'),
        ('wagtailimages', '0001_squashed_0021'),
    ]

    operations = [
        migrations.CreateModel(
            name='AddressSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('streetAddress', models.CharField(max_length=255, verbose_name='Street')),
                ('addressLocality', models.CharField(max_length=255, verbose_name='City')),
                ('addressRegion', models.CharField(max_length=4, verbose_name='Province/Region code es: TO for Torino')),
                ('postalCode', models.CharField(max_length=10, verbose_name='Zip code')),
                ('addressCountry', models.CharField(max_length=10, verbose_name='State ISO code, es IT')),
                ('site', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.Site')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BaseSnippet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255, unique=True, verbose_name='Logical description')),
                ('identifier', models.CharField(max_length=255, unique=True, verbose_name='Unique identifier to use in template')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.search.index.Indexed, models.Model),
        ),
        migrations.CreateModel(
            name='BrewerySettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acceptsReservations', models.BooleanField(default=True, verbose_name='Accepts reservation')),
                ('currenciesAccepted', models.CharField(help_text='Es [EUR, GBP]', max_length=255, verbose_name='Currencies Accepted')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('legal_name', models.CharField(max_length=100, verbose_name='Legal name')),
                ('vat_id', models.CharField(max_length=40, verbose_name='Vat ID number')),
                ('url', models.URLField(max_length=255, verbose_name='Site Url')),
                ('logo', models.URLField(max_length=255, verbose_name='Logo Url')),
                ('description', models.TextField(verbose_name='Description')),
                ('openingHours', models.CharField(help_text='Days are specified with two-letter combinations: Mo, Tu, We, Th, Fr, Sa, Su. Times are specified using 24:00 time. Example: "Tu,Th 16:00-20:00"', max_length=255, verbose_name='Opening hours')),
                ('priceRange', models.CharField(help_text='The price range of the business, for example €€€', max_length=5, verbose_name='How cheap is the brewery')),
                ('foundingDate', models.CharField(max_length=4, verbose_name='Year of foundation')),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.AddressSettings', verbose_name='Organization address')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtailschemaorg.registry.SiteThingLD, models.Model),
        ),
        migrations.CreateModel(
            name='ContactPointSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contactType', models.CharField(max_length=255, verbose_name='Contact type es. Customer Support')),
                ('telephone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, verbose_name='Telephone number es +441719897979')),
                ('email', models.EmailField(max_length=254, verbose_name='Email address')),
                ('site', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.Site')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('slide_interval', models.IntegerField(default=5, verbose_name='Interval in seconds for the homepage slider')),
                ('body', wagtail.core.fields.RichTextField(blank=True, null=True, verbose_name='Text sliding - star wars style :-)... in the home page')),
                ('image_collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='home_page', to='wagtailcore.Collection', verbose_name='Collections of images for the carousel')),
                ('logo_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='LinkPlacement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('container', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='link_lists', to='home.BaseSnippet')),
            ],
            options={
                'verbose_name': 'Link positioning',
                'verbose_name_plural': 'Link positionings',
            },
        ),
        migrations.CreateModel(
            name='LinkSnippet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=255, unique=True, verbose_name='Unique identifier to use in template')),
                ('link_text', models.CharField(max_length=255, verbose_name='Text to display')),
                ('url', models.URLField(max_length=512, verbose_name='Url for external page')),
            ],
            bases=(wagtail.search.index.Indexed, models.Model),
        ),
        migrations.CreateModel(
            name='SocialMediaSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facebook', models.URLField(blank=True, help_text='Your Facebook page URL', max_length=255, null=True, verbose_name='Facebook Url')),
                ('instagram', models.URLField(blank=True, help_text='Your instagram page URL', max_length=255, null=True, verbose_name='Instagram Url')),
                ('twitter', models.URLField(blank=True, help_text='Your twitter page URL', max_length=255, null=True, verbose_name='Twitter Url')),
                ('youtube', models.URLField(blank=True, help_text='Your YouTube channel or user account URL', max_length=255, null=True, verbose_name='Youtube Url')),
                ('site', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.Site')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='linkplacement',
            name='content',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='containers', to='home.LinkSnippet'),
        ),
        migrations.AddField(
            model_name='brewerysettings',
            name='contactPoint',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.ContactPointSettings', verbose_name='Contact point'),
        ),
        migrations.AddField(
            model_name='brewerysettings',
            name='same_as',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.SocialMediaSettings', verbose_name='Same as Social media accounts'),
        ),
        migrations.AddField(
            model_name='brewerysettings',
            name='site',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.Site'),
        ),
    ]
